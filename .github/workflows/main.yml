name: Deploy to Firebase (Production)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install dependencies
        run: npm ci

      - name: Create environment.production.ts
        run: |
          cat <<EOF > src/environments/environment.production.ts
          export const environment = {
            production: true,
            imageProvider: 'google',
            firebaseConfig: {
              apiKey: "${{ secrets.FIREBASE_API_KEY }}",
              authDomain: "${{ secrets.FIREBASE_AUTH_DOMAIN }}",
              projectId: "${{ secrets.FIREBASE_PROJECT_ID }}",
              storageBucket: "${{ secrets.FIREBASE_STORAGE_BUCKET }}",
              messagingSenderId: "${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}",
              appId: "${{ secrets.FIREBASE_APP_ID }}",
              measurementId: "${{ secrets.FIREBASE_MEASUREMENT_ID }}"
            },
            openAIConfig: {
              apiKey: "${{ secrets.OPENAI_API_KEY }}",
              apiUrl: "${{ secrets.OPENAI_API_URL }}",
              aiImageApiUrl: "${{ secrets.OPENAI_API_IMAGE_URL }}"
            },
            googleConfig: {
              apiKey: "${{ secrets.GOOGLE_API_KEY }}",
              cseId: "${{ secrets.GOOGLE_CSE_ID }}"
            },
            stabilityConfig: {
              apiKey: "${{ secrets.STABILITY_API_KEY }}",
              apiUrl: "${{ secrets.STABILITY_CSE_ID }}"
            },
            fluxConfig: {
              apiKey: "${{ secrets.FLUX_API_KEY }}",
              apiUrl: "${{ secrets.FLUX_CSE_ID }}",
              model: "${{ secrets.FLUX_MODEL }}"
            }
          };
          EOF

      - name: Build Angular app
        run: npm run build

      - name: Deploy to Firebase (Live)
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_PROD }}
          projectId: story-maker-373a2
          channelId: live
